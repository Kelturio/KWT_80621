FUNCTION_BLOCK "Alarm"
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Searinox
VERSION : 0.1
   VAR_INPUT 
      iCvOff : Bool;   // Control Voltage Off / emergency stop
      iFuseOutputsErr : Bool;   // Fuse Outputs Error
      iCt1RepairSwitchOff : Bool;   // Cooling Tower 1 Repair Switch
      iCt2RepairSwitchOff : Bool;   // Cooling Tower 2 Repair Switch
      iCt1SprayPipeOpen : Bool;   // Cooling Tower 1 Spray Pipe open
      iCt2SprayPipeOpen : Bool;   // Cooling Tower 2 Spray Pipe open
      iCt1SprayPipeIsOpen : Bool;   // Cooling Tower 1 Spray Pipe is open
      iCt2SprayPipeIsOpen : Bool;   // Cooling Tower 2 Spray Pipe is open
      iFlowTempPlant : Real;   // Flow Temperature Plant
      iFlowTempFurnace : Real;   // Flow Temperature Furnace
      iSurgeTankLevel : Int;
      iFan1 : "Fan";
      iFan2 : "Fan";
      iPumpPlant1 : "Pump";
      iPumpPlant2 : "Pump";
      iPumpCoolWater1 : "Pump";
      iPumpCoolWater2 : "Pump";
      iPumpFurnace1 : "Pump";
      iPumpFurnace2 : "Pump";
      iSprayPipe1 : "Valve";
      iSprayPipe2 : "Valve";
      iSurgeTankRefill : "Valve";
      iLiftingSys1 : "LiftingSys";
      iLiftingSys2 : "LiftingSys";
   END_VAR

   VAR_OUTPUT 
      oAlarmCount : Int := 0;
      oAlarmLamp : Bool := false;
      oSprayPipeOpenTimeout1 : Bool;
      oSprayPipeOpenTimeout2 : Bool;
   END_VAR

   VAR 
      sCvOff : Int;
      sFuseOutputsErr : Int;
      sCt1FanErr : Int;
      sCt1RepairSwitchOff : Int;
      sCt2FanErr : Int;
      sCt2RepairSwitchOff : Int;
      sPumpPlant1Err : Int;
      sPumpPlant2Err : Int;
      sPumpCoolWater1Err : Int;
      sPumpCoolWater2Err : Int;
      sPumpFurnace1Err : Int;
      sPumpFurnace2Err : Int;
      sFlowTempPlantHot : Int;
      sFlowTempFurnaceHot : Int;
      sPressureDeltaPerc1 : Int;
      sPressureDeltaPerc2 : Int;
      sSurgeTankRunDry : Int;
      sSurgeTankOverflow : Int;
      Ton0 {OriginalPartName := 'IEC_TIMER'; LibVersion := '1.0'} : TON_TIME;
      Ton1 {OriginalPartName := 'IEC_TIMER'; LibVersion := '1.0'} : TON_TIME;
      sSprayPipeOpenTimeout1 : Int;
      sSprayPipeOpenTimeout2 : Int;
   END_VAR

   VAR_TEMP 
      tSprayPipeOpenTimer1 : Bool;
      tSprayPipeOpenTimer1Et : Time;
      tSprayPipeOpenTimer2 : Bool;
      tSprayPipeOpenTimer2Et : Time;
   END_VAR


BEGIN
	REGION bool
	    #sCvOff := BOOL_TO_INT(#iCvOff);
	    #sFuseOutputsErr := BOOL_TO_INT(#iFuseOutputsErr);
	    #sCt1FanErr := BOOL_TO_INT(#iFan1.HasError);
	    #sCt2FanErr := BOOL_TO_INT(#iFan2.HasError);
	    #sCt1RepairSwitchOff := BOOL_TO_INT(#iCt1RepairSwitchOff);
	    #sCt2RepairSwitchOff := BOOL_TO_INT(#iCt2RepairSwitchOff);
	    #sPumpPlant1Err := BOOL_TO_INT(#iPumpPlant1.HasError);
	    #sPumpPlant2Err := BOOL_TO_INT(#iPumpPlant2.HasError);
	    #sPumpCoolWater1Err := BOOL_TO_INT(#iPumpCoolWater1.HasError);
	    #sPumpCoolWater2Err := BOOL_TO_INT(#iPumpCoolWater2.HasError);
	    #sPumpFurnace1Err := BOOL_TO_INT(#iPumpFurnace1.HasError);
	    #sPumpFurnace2Err := BOOL_TO_INT(#iPumpFurnace2.HasError);
	END_REGION
	REGION analog
	    // temperatures
	    #sFlowTempPlantHot := BOOL_TO_INT(#iFlowTempPlant >=
	                                      ("Main_DB".Auto.sSetPointMax +
	                                      "Retain_DB".Settings.MaxTempTransgression));
	    #sFlowTempFurnaceHot := BOOL_TO_INT(#iFlowTempFurnace >=
	                                        ("Main_DB".Auto.sSetPointMax +
	                                        "Retain_DB".Settings.MaxTempTransgression));
	    // pressures
	    (*    #tPressureDeltaPerc1 := "ScaleValueInt"(VALUE := #iLiftingSys1.DeltaPressure,
	                                            XMIN := "AnalogMin",
	                                            XMAX := "AnalogMax",
	                                            YMIN := 0,
	                                            YMAX := 100); *)
	    #sPressureDeltaPerc1 := BOOL_TO_INT(#iLiftingSys1.DeltaPressure.Val.Perc >=
	                                        #iLiftingSys1.DeltaPressure.Alarm.Max.Perc);
	(*    #tPressureDeltaPerc2 := "ScaleValueInt"(VALUE := #iLiftingSys2.DeltaPressure,
	                                            XMIN := "AnalogMin",
	                                            XMAX := "AnalogMax",
	                                            YMIN := 0,
	                                            YMAX := 100); *)
	    #sPressureDeltaPerc2 := BOOL_TO_INT(#iLiftingSys2.DeltaPressure.Val.Perc >=
	                                        #iLiftingSys2.DeltaPressure.Alarm.Max.Perc);
	    // levels
	    #sSurgeTankRunDry
	    := BOOL_TO_INT(#iSurgeTankLevel
	                   <= "Retain_DB".Settings.SurgeTankLevel.RunDry);
	    #sSurgeTankOverflow
	    := BOOL_TO_INT(#iSurgeTankLevel
	                   >= "Retain_DB".Settings.SurgeTankLevel.Overflow);
	END_REGION
	REGION timeout
	    #Ton0(IN := #iSprayPipe1.Q,
	          PT := #iSprayPipe1.Timeout);
	    #sSprayPipeOpenTimeout1 := BOOL_TO_INT(#Ton0.Q AND NOT #iSprayPipe1.IsOpen);
	    #Ton1(IN := #iSprayPipe2.Q,
	          PT := #iSprayPipe2.Timeout);
	    #sSprayPipeOpenTimeout2 := BOOL_TO_INT(#Ton1.Q AND NOT #iSprayPipe2.IsOpen);
	END_REGION
	
	#oAlarmCount := 0;
	#oAlarmCount += #sCvOff;
	#oAlarmCount += #sFuseOutputsErr;
	#oAlarmCount += #sCt1FanErr;
	#oAlarmCount += #sCt1RepairSwitchOff;
	#oAlarmCount += #sCt2FanErr;
	#oAlarmCount += #sCt2RepairSwitchOff;
	#oAlarmCount += #sPumpPlant1Err;
	#oAlarmCount += #sPumpPlant2Err;
	#oAlarmCount += #sPumpCoolWater1Err;
	#oAlarmCount += #sPumpCoolWater2Err;
	#oAlarmCount += #sPumpFurnace1Err;
	#oAlarmCount += #sPumpFurnace2Err;
	#oAlarmCount += #sFlowTempPlantHot;
	#oAlarmCount += #sFlowTempFurnaceHot;
	#oAlarmCount += #sPressureDeltaPerc1;
	#oAlarmCount += #sPressureDeltaPerc2;
	#oAlarmCount += #sSurgeTankRunDry;
	#oAlarmCount += #sSurgeTankOverflow;
	#oAlarmCount += #sSprayPipeOpenTimeout1;
	#oAlarmCount += #sSprayPipeOpenTimeout2;
	
	#oAlarmLamp := #oAlarmCount > 0;
	#oSprayPipeOpenTimeout1 := #sSprayPipeOpenTimeout1 > 0;
	#oSprayPipeOpenTimeout2 := #sSprayPipeOpenTimeout2 > 0;
END_FUNCTION_BLOCK

