FUNCTION_BLOCK "Alarm"
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Searinox
VERSION : 0.1
   VAR_INPUT 
      iCvOff : Bool;   // Control Voltage Off / emergency stop
      iFuseOutputsErr : Bool;   // Fuse Outputs Error
      iCt1FanErr : Bool;   // Cooling Tower 1 Fan Error
      iCt2FanErr : Bool;   // Cooling Tower 2 Fan Error
      iCt1RepairSwitchOff : Bool;   // Cooling Tower 1 Repair Switch
      iCt2RepairSwitchOff : Bool;   // Cooling Tower 2 Repair Switch
      iCt1SprayPipeOpen : Bool;   // Cooling Tower 1 Spray Pipe open
      iCt2SprayPipeOpen : Bool;   // Cooling Tower 2 Spray Pipe open
      iCt1SprayPipeIsOpen : Bool;   // Cooling Tower 1 Spray Pipe is open
      iCt2SprayPipeIsOpen : Bool;   // Cooling Tower 2 Spray Pipe is open
      iPumpPlant1Err : Bool;   // Plant Pump 1 Error
      iPumpPlant2Err : Bool;   // Plant Pump 2 Error
      iPumpCoolWater1Err : Bool;   // Cooling Water Pump 1 Error
      iPumpCoolWater2Err : Bool;   // Cooling Water Pump 2 Error
      iPumpFurnace1Err : Bool;   // Furnace Pump 1 Error
      iPumpFurnace2Err : Bool;   // Furnace Pump 2 Error
      iFlowTempPlant : Real;   // Flow Temperature Plant
      iFlowTempFurnace : Real;   // Flow Temperature Furnace
      iLiftSys1DeltaPressure : Int;   // Lifting System 1 Delta Pressure
      iLiftSys2DeltaPressure : Int;   // Lifting System 2 Delta Pressure
      iSurgeTankLevel : Int;
   END_VAR

   VAR_OUTPUT 
      oAlarmCount : Int := 0;
      oAlarmLamp : Bool := false;
   END_VAR

   VAR 
      sCvOff : Int;
      sFuseOutputsErr : Int;
      sCt1FanErr : Int;
      sCt1RepairSwitchOff : Int;
      sCt2FanErr : Int;
      sCt2RepairSwitchOff : Int;
      sPumpPlant1Err : Int;
      sPumpPlant2Err : Int;
      sPumpCoolWater1Err : Int;
      sPumpCoolWater2Err : Int;
      sPumpFurnace1Err : Int;
      sPumpFurnace2Err : Int;
      sFlowTemperaturePlantHot : Int;
      sFlowTemperatureFurnaceHot : Int;
      sPressureDeltaPerc1 : Int;
      sPressureDeltaPerc2 : Int;
      sSurgeTankRunDry : Int;
      sSurgeTankOverflow : Int;
      IEC_TMR_0 {OriginalPartName := 'IEC_TIMER'; LibVersion := '1.0'} : IEC_TIMER;
      IEC_TMR_1 {OriginalPartName := 'IEC_TIMER'; LibVersion := '1.0'} : IEC_TIMER;
      sSprayTubeOpenTimeout1 : Int;
      sSprayTubeOpenTimeout2 : Int;
   END_VAR

   VAR_TEMP 
      tPressureDeltaPerc1 : Int;
      tPressureDeltaPerc2 : Int;
      tSprayTubeOpenTimer1 : Bool;
      tSprayTubeOpenTimer1Et : Time;
      tSprayTubeOpenTimer2 : Bool;
      tSprayTubeOpenTimer2Et : Time;
   END_VAR


BEGIN
	REGION bool
	    #sCvOff := BOOL_TO_INT(#iCvOff);
	    #sFuseOutputsErr := BOOL_TO_INT(#iFuseOutputsErr);
	    #sCt1FanErr := BOOL_TO_INT(#iCt1FanErr);
	    #sCt2FanErr := BOOL_TO_INT(#iCt2FanErr);
	    #sCt1RepairSwitchOff := BOOL_TO_INT(#iCt1RepairSwitchOff);
	    #sCt2RepairSwitchOff := BOOL_TO_INT(#iCt2RepairSwitchOff);
	    #sPumpPlant1Err := BOOL_TO_INT(#iPumpPlant1Err);
	    #sPumpPlant2Err := BOOL_TO_INT(#iPumpPlant2Err);
	    #sPumpCoolWater1Err := BOOL_TO_INT(#iPumpCoolWater1Err);
	    #sPumpCoolWater2Err := BOOL_TO_INT(#iPumpCoolWater2Err);
	    #sPumpFurnace1Err := BOOL_TO_INT(#iPumpFurnace1Err);
	    #sPumpFurnace2Err := BOOL_TO_INT(#iPumpFurnace2Err);
	END_REGION
	REGION analog
	    // temperatures
	    #sFlowTemperaturePlantHot := BOOL_TO_INT("Main_DB".FlowTemperaturePlant >= ("Main_DB".Auto.s_Max + "Retain_DB".Settings.MaxTempTransgression));
	    #sFlowTemperatureFurnaceHot := BOOL_TO_INT("Main_DB".FlowTemperatureFurnace >= ("Main_DB".Auto.s_Max + "Retain_DB".Settings.MaxTempTransgression));
	    // pressures
	    #tPressureDeltaPerc1 := "ScaleValueInt"(VALUE := #iLiftSys1DeltaPressure,
	                                            XMIN := "AnalogMin", XMAX := "AnalogMax",
	                                            YMIN := 0, YMAX := 100);
	    #sPressureDeltaPerc1 := BOOL_TO_INT(#"tPressureDeltaPerc1" >= "Retain_DB".Settings.MaxPressureDeltaPerc1);
	    #tPressureDeltaPerc2 := "ScaleValueInt"(VALUE := #iLiftSys2DeltaPressure,
	                                            XMIN := "AnalogMin", XMAX := "AnalogMax",
	                                            YMIN := 0, YMAX := 100);
	    #sPressureDeltaPerc2 := BOOL_TO_INT(#"tPressureDeltaPerc2" >= "Retain_DB".Settings.MaxPressureDeltaPerc2);
	    
	    #sSurgeTankRunDry := BOOL_TO_INT(#iSurgeTankLevel <= "Main_DB".HMI.StorageTankLevel.P4);
	    #sSurgeTankOverflow := BOOL_TO_INT(#iSurgeTankLevel >= "Main_DB".HMI.StorageTankLevel.P1);
	END_REGION
	REGION timeout
	    #IEC_TMR_0.TON(IN := #iCt1SprayPipeOpen,
	                   PT := "Retain_DB".Settings.SprayTubeOpenTimeout,
	                   Q => #tSprayTubeOpenTimer1,
	                   ET => #tSprayTubeOpenTimer1Et);
	    #sSprayTubeOpenTimeout1 := BOOL_TO_INT(#tSprayTubeOpenTimer1 AND NOT #iCt1SprayPipeIsOpen);
	    #IEC_TMR_1.TON(IN := #iCt2SprayPipeOpen,
	                   PT := "Retain_DB".Settings.SprayTubeOpenTimeout,
	                   Q => #tSprayTubeOpenTimer2,
	                   ET => #tSprayTubeOpenTimer2Et);
	    #sSprayTubeOpenTimeout2 := BOOL_TO_INT(#tSprayTubeOpenTimer2 AND NOT #iCt2SprayPipeIsOpen);
	END_REGION
	
	#oAlarmCount := 0;
	#oAlarmCount += #sCvOff;
	#oAlarmCount += #sFuseOutputsErr;
	#oAlarmCount += #sCt1FanErr;
	#oAlarmCount += #sCt1RepairSwitchOff;
	#oAlarmCount += #sCt2FanErr;
	#oAlarmCount += #sCt2RepairSwitchOff;
	#oAlarmCount += #sPumpPlant1Err;
	#oAlarmCount += #sPumpPlant2Err;
	#oAlarmCount += #sPumpCoolWater1Err;
	#oAlarmCount += #sPumpCoolWater2Err;
	#oAlarmCount += #sPumpFurnace1Err;
	#oAlarmCount += #sPumpFurnace2Err;
	#oAlarmCount += #sFlowTemperaturePlantHot;
	#oAlarmCount += #sFlowTemperatureFurnaceHot;
	#oAlarmCount += #sPressureDeltaPerc1;
	#oAlarmCount += #sPressureDeltaPerc2;
	#oAlarmCount += #sSurgeTankRunDry;
	#oAlarmCount += #sSurgeTankOverflow;
	#oAlarmCount += #sSprayTubeOpenTimeout1;
	#oAlarmCount += #sSprayTubeOpenTimeout2;
	
	#oAlarmLamp := #oAlarmCount > 0;
	
	// heizung klappen & endschalter offen zu 
END_FUNCTION_BLOCK

